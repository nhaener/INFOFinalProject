## Section to: Write formated data sets
#############################################################
#############################################################
write.csv(OB, file = "data/OB.csv")
write.csv(OB_S, file = "data/OB_S.csv")
write.csv(AC, file = "data/AC.csv")
write.csv(AC_S, file = "data/AC_S.csv")
df <- OB
class(OB$FIPS_Codes)
df <- OB
colnames(df)[2] <- "region"
df <- df %>% select(1:3, percent_2004, Lat, Long)
colnames(df)[4] <- "value"
county_choropleth(df)
#############################################################
#############################################################
##
##
##
##
##
##
#############################################################
#############################################################
#############################################################
# Load Library
library(shiny)
library(plotly)
library(dplyr)
library(choroplethr)
#############################################################
# Read in data
OB <- read.csv("data/OB.csv")
OB_S <- read.csv("data/OB_S.csv")
AC <- read.csv("data/AC.csv")
AC_S <- read.csv("data/AC_S.csv")
# Server
shinyServer(function(input, output) {
# Ouput for Overview page
output$OB_St_level <- renderPlotly({
df <- OB
colnames(df)[2] <- "region"
df <- df %>% select(1:3, percent_2004, Lat, Long)
colnames(df)[4] <- "value"
county_choropleth(df)
})
})
runApp()
help("sliderInput")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help("selectInput")
runApp()
runApp()
runApp()
runApp()
runApp()
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0(2004)), Lat, Long)
colnames(df)[4] <- "value"
county_choropleth(df)
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), Lat, Long)
colnames(df)[4] <- "value"
county_choropleth(df)
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
View(df)
colnames(df)[2] <- "region"
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
View(OB)
#############################################################
#############################################################
## This file will be used to organize our data sets into the
## format we need for our project.
##
## File name convention:
## OB <- Obesity Prevalence
## S <- sex
## AC <- Activity
## LL <- Lat & Long
## AB <- State Abbreviation names
##
## See google doc and/or issues for what needs to be done.
##
#############################################################
#############################################################
#############################################################
## Set working directory
# setwd("")
#############################################################
## Install any packages
# install.packages("DataCombine")
#############################################################
## Library
library(DataCombine)
library(dplyr)
#############################################################
#Source data formatting functions
source("format_functions.R")
#############################################################
## Reads in files to be worked on
LL <- read.csv("data/original/Lat_long_by_county.csv")
AB <- read.csv("data/original/StateName_abvr.csv")
OB <- read.csv("data/original/OB_PREV_ALL_STATES.csv")
OB_S <- read.csv("data/original/OB_PREV_by_sex_ALL_STATES.csv")
AC <- read.csv("data/original/LTPIA_PREV_ALL_STATES.csv")
AC_S <- read.csv("data/original/LTPIA_PREV_by_sex_ALL_STATES.csv")
#############################################################
#############################################################
## Section to work on LL and AB data
#############################################################
#############################################################
# Corrects LL to have full state name, requires DataCombine package
# to be loaded.
LL <- FindReplace(LL, "USPS", AB, from = "Abbreviation", to ="US.State",
exact = TRUE)
# Sets LL Column names
colnames(LL) <- c("State", "GEOID", "ANSICODE", "County", "Lat", "Long")
#############################################################
#############################################################
## Section to: correct column names of all files
#############################################################
#############################################################
# Formats column names for each file
OB <- format_data(OB, 2004:2012, 4, 11)
OB_S <- format_data(OB_S, 2009:2012, 4, 18)
AC <- format_data(AC, 2004:2012, 4, 11)
AC_S <- format_data(AC_S, 2009:2012, 4, 18)
#############################################################
#############################################################
## Section to: remove unnecessary information
#############################################################
#############################################################
OB <- remove_cols(OB)
OB_S <- remove_cols(OB_S)
AC <- remove_cols(AC)
AC_S <- remove_cols(AC_S)
#############################################################
#############################################################
## Section to: change percents and numbers to integer values
#############################################################
#############################################################
OB <- make_numeric(OB)
OB_S <- make_numeric(OB_S)
AC <- make_numeric(AC)
AC_S <- make_numeric(AC_S)
#############################################################
#############################################################
## Section to: add LL data to all files
#############################################################
#############################################################
OB <- add_location(OB, LL)
OB_S <- add_location(OB_S, LL)
AC <- add_location(AC, LL)
AC_S <- add_location(AC_S, LL)
#############################################################
#############################################################
## Section to: Write formated data sets
#############################################################
#############################################################
write.csv(OB, file = "data/OB.csv")
write.csv(OB_S, file = "data/OB_S.csv")
write.csv(AC, file = "data/AC.csv")
write.csv(AC_S, file = "data/AC_S.csv")
View(OB)
OB <- read.csv("data/OB.csv")
OB_S <- read.csv("data/OB_S.csv")
AC <- read.csv("data/AC.csv")
AC_S <- read.csv("data/AC_S.csv")
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
View(df)
View(OB)
OB <- read.csv("data/OB.csv")
View(OB)
OB <- read.csv("data/OB.csv")
OB_S <- read.csv("data/OB_S.csv")
AC <- read.csv("data/AC.csv")
AC_S <- read.csv("data/AC_S.csv")
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), Lat, Long)
colnames(df)[4] <- "value"
county_choropleth(df)
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
View(OB)
#############################################################
#############################################################
## This file will be used to organize our data sets into the
## format we need for our project.
##
## File name convention:
## OB <- Obesity Prevalence
## S <- sex
## AC <- Activity
## LL <- Lat & Long
## AB <- State Abbreviation names
##
## See google doc and/or issues for what needs to be done.
##
#############################################################
#############################################################
#############################################################
## Set working directory
# setwd("")
#############################################################
## Install any packages
# install.packages("DataCombine")
#############################################################
## Library
library(DataCombine)
library(dplyr)
#############################################################
#Source data formatting functions
source("format_functions.R")
#############################################################
## Reads in files to be worked on
LL <- read.csv("data/original/Lat_long_by_county.csv")
AB <- read.csv("data/original/StateName_abvr.csv")
OB <- read.csv("data/original/OB_PREV_ALL_STATES.csv")
OB_S <- read.csv("data/original/OB_PREV_by_sex_ALL_STATES.csv")
AC <- read.csv("data/original/LTPIA_PREV_ALL_STATES.csv")
AC_S <- read.csv("data/original/LTPIA_PREV_by_sex_ALL_STATES.csv")
#############################################################
#############################################################
## Section to work on LL and AB data
#############################################################
#############################################################
# Corrects LL to have full state name, requires DataCombine package
# to be loaded.
LL <- FindReplace(LL, "USPS", AB, from = "Abbreviation", to ="US.State",
exact = TRUE)
# Sets LL Column names
colnames(LL) <- c("State", "GEOID", "ANSICODE", "County", "Lat", "Long")
#############################################################
#############################################################
## Section to: correct column names of all files
#############################################################
#############################################################
# Formats column names for each file
OB <- format_data(OB, 2004:2012, 4, 11)
OB_S <- format_data(OB_S, 2009:2012, 4, 18)
AC <- format_data(AC, 2004:2012, 4, 11)
AC_S <- format_data(AC_S, 2009:2012, 4, 18)
#############################################################
#############################################################
## Section to: remove unnecessary information
#############################################################
#############################################################
OB <- remove_cols(OB)
OB_S <- remove_cols(OB_S)
AC <- remove_cols(AC)
AC_S <- remove_cols(AC_S)
#############################################################
#############################################################
## Section to: change percents and numbers to integer values
#############################################################
#############################################################
OB <- make_numeric(OB)
OB_S <- make_numeric(OB_S)
AC <- make_numeric(AC)
AC_S <- make_numeric(AC_S)
#############################################################
#############################################################
## Section to: add LL data to all files
#############################################################
#############################################################
OB <- add_location(OB, LL)
OB_S <- add_location(OB_S, LL)
AC <- add_location(AC, LL)
AC_S <- add_location(AC_S, LL)
#############################################################
#############################################################
## Section to: Write formated data sets
#############################################################
#############################################################
write.csv(OB, file = "data/OB.csv", row.names=FALSE)
write.csv(OB_S, file = "data/OB_S.csv", row.names=FALSE)
write.csv(AC, file = "data/AC.csv", row.names=FALSE)
write.csv(AC_S, file = "data/AC_S.csv", row.names=FALSE)
OB <- read.csv("data/OB.csv")
OB_S <- read.csv("data/OB_S.csv")
AC <- read.csv("data/AC.csv")
AC_S <- read.csv("data/AC_S.csv")
View(OB)
df <- OB %>% select(1:3, contains("percent"), Lat, Long)
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), Lat, Long)
colnames(df)[4] <- "value"
county_choropleth(df)
runApp()
View(OB)
runApp()
runApp()
runApp()
runApp()
runApp()
help("select")
runApp()
df <- OB %>% select(1:3, contains("percent"), contains("Lat"), contains("Long"))
View(df)
colnames(df) <- "region"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
df <- OB %>% select(1:3, contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0(input$OB_st_level_year_select)), contains("Lat"), contains("Long"))
colnames(df)[4] <- "value"
df <- OB %>% select(1:3, contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[4] <- "value"
df <- OB
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(select(df, contains("percent"))) <- "value"
df <- OB %>% select(1:3, contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[5] <- "value"
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[5] <- "value"
l <- list(color = toRGB("white"), width = 2)
other <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
View(other)
help(plot_ly)
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[5] <- "value"
# df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
#                            "Fruits", total.fruits, "Veggies", total.veggies,
#                            "<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[5] <- "value"
# df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
#                            "Fruits", total.fruits, "Veggies", total.veggies,
#                            "<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
plot_ly(df, locations = region, type = 'county_choropleth',
locationmode = 'USA-states', color = "value", colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
plot_ly(df, locations = region, type = 'choropleth',
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[5] <- "value"
# df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
#                            "Fruits", total.fruits, "Veggies", total.veggies,
#                            "<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
plot_ly(df, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = "value", colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
library(shiny)
library(plotly)
library(dplyr)
library(choroplethr)
#############################################################
#############################################################
## This file will be used to organize our data sets into the
## format we need for our project.
##
## File name convention:
## OB <- Obesity Prevalence
## S <- sex
## AC <- Activity
## LL <- Lat & Long
## AB <- State Abbreviation names
##
## See google doc and/or issues for what needs to be done.
##
#############################################################
#############################################################
#############################################################
## Set working directory
# setwd("")
#############################################################
## Install any packages
# install.packages("DataCombine")
#############################################################
## Library
library(DataCombine)
library(dplyr)
#############################################################
#Source data formatting functions
source("format_functions.R")
#############################################################
## Reads in files to be worked on
LL <- read.csv("data/original/Lat_long_by_county.csv")
AB <- read.csv("data/original/StateName_abvr.csv")
OB <- read.csv("data/original/OB_PREV_ALL_STATES.csv")
OB_S <- read.csv("data/original/OB_PREV_by_sex_ALL_STATES.csv")
AC <- read.csv("data/original/LTPIA_PREV_ALL_STATES.csv")
AC_S <- read.csv("data/original/LTPIA_PREV_by_sex_ALL_STATES.csv")
#############################################################
#############################################################
## Section to work on LL and AB data
#############################################################
#############################################################
# Corrects LL to have full state name, requires DataCombine package
# to be loaded.
LL <- FindReplace(LL, "USPS", AB, from = "Abbreviation", to ="US.State",
exact = TRUE)
# Sets LL Column names
colnames(LL) <- c("State", "GEOID", "ANSICODE", "County", "Lat", "Long")
#############################################################
#############################################################
## Section to: correct column names of all files
#############################################################
#############################################################
# Formats column names for each file
OB <- format_data(OB, 2004:2012, 4, 11)
OB_S <- format_data(OB_S, 2009:2012, 4, 18)
AC <- format_data(AC, 2004:2012, 4, 11)
AC_S <- format_data(AC_S, 2009:2012, 4, 18)
#############################################################
#############################################################
## Section to: remove unnecessary information
#############################################################
#############################################################
OB <- remove_cols(OB)
OB_S <- remove_cols(OB_S)
AC <- remove_cols(AC)
AC_S <- remove_cols(AC_S)
#############################################################
#############################################################
## Section to: change percents and numbers to integer values
#############################################################
#############################################################
OB <- make_numeric(OB)
OB_S <- make_numeric(OB_S)
AC <- make_numeric(AC)
AC_S <- make_numeric(AC_S)
#############################################################
#############################################################
## Section to: add LL data to all files
#############################################################
#############################################################
OB <- add_location(OB, LL)
OB_S <- add_location(OB_S, LL)
AC <- add_location(AC, LL)
AC_S <- add_location(AC_S, LL)
#############################################################
#############################################################
## Section to: Write formated data sets
#############################################################
#############################################################
write.csv(OB, file = "data/OB.csv")
write.csv(OB_S, file = "data/OB_S.csv")
write.csv(AC, file = "data/AC.csv")
write.csv(AC_S, file = "data/AC_S.csv")
View(OB)
View(OB)
