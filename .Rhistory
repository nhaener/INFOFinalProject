# Corrects LL to have full state name, requires DataCombine package
# to be loaded.
LL <- FindReplace(LL, "USPS", AB, from = "Abbreviation", to ="US.State",
exact = TRUE)
# Sets LL Column names
colnames(LL) <- c("State", "GEOID", "ANSICODE", "County", "Lat", "Long")
#############################################################
#############################################################
## Section to: correct column names of all files
#############################################################
#############################################################
# Formats column names for each file
OB <- format_data(OB, 2004:2012, 4, 11)
OB_S <- format_data(OB_S, 2009:2012, 4, 18)
AC <- format_data(AC, 2004:2012, 4, 11)
AC_S <- format_data(AC_S, 2009:2012, 4, 18)
#############################################################
#############################################################
## Section to: remove unnecessary information
#############################################################
#############################################################
OB <- remove_cols(OB)
OB_S <- remove_cols(OB_S)
AC <- remove_cols(AC)
AC_S <- remove_cols(AC_S)
#############################################################
#############################################################
## Section to: change percents and numbers to integer values
#############################################################
#############################################################
OB <- make_numeric(OB)
OB_S <- make_numeric(OB_S)
AC <- make_numeric(AC)
AC_S <- make_numeric(AC_S)
#############################################################
#############################################################
## Section to: add LL data to all files
#############################################################
#############################################################
OB <- add_location(OB, LL)
OB_S <- add_location(OB_S, LL)
AC <- add_location(AC, LL)
AC_S <- add_location(AC_S, LL)
#############################################################
#############################################################
## Section to: Write formated data sets
#############################################################
#############################################################
write.csv(OB, file = "data/OB.csv", row.names = FALSE)
write.csv(OB_S, file = "data/OB_S.csv", row.names = FALSE)
write.csv(AC, file = "data/AC.csv", row.names = FALSE)
write.csv(AC_S, file = "data/AC_S.csv", row.names = FALSE)
runApp()
install.packages("choroplethrMaps")
install.packages("choroplethrMaps")
shiny::runApp()
runApp()
View(OB)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
OB <- read.csv("data/OB.csv")
OB_S <- read.csv("data/OB_S.csv")
AC <- read.csv("data/AC.csv")
AC_S <- read.csv("data/AC_S.csv")
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains("Lat"), contains("Long"))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004")), contains("Lat"), contains("Long"))
colnames(df)[5] <- "value"
county_choropleth(df, state_zoom = "washington")
county_choropleth(df)
county_choropleth(df, reference_map = TRUE)
county_choropleth(df, reference_map = FALSE)
county_choropleth(df, reference_map = TRUE)
county_choropleth(df)
map <-  county_choropleth(df)
plot_ly(map)
p <- plot_ly(map)
p
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_ly(map) %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p
p <- plot_ly(map, type = 'choropleth') %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p
p <- plot_ly(map, type = 'county_choropleth') %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p
p <- plot_ly(map, type = 'choropleth') %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p
p <- plot_ly(df, type = 'choropleth') %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p
View(p)
df$hover <- with(df, paste(State, '<br>', "Percent Obese", percent_2004, '<br>', "Number Surveyed", number_2004))
df$hover <- with(df, paste(State, '<br>', "Percent Obese", value, '<br>', "Number Surveyed", number_2004))
p <- plot_ly(df, text= hover,type = 'choropleth') %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p
p <- ggplot(df, text= hover,type = 'scc') %>%
layout(title = '2004 Obese by county<br>(Hover for breakdown)', geo = g)
p <- ggplotly(p)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("choroplethrMaps")
install.packages("choroplethrMaps")
shiny::runApp()
runApp()
c <- CountyChoropleth$new(df)
# Load Library
library(shiny)
library(plotly)
library(dplyr)
library(choroplethrMaps)
#############################################################
# Read in data
OB <- read.csv("data/OB.csv")
OB_S <- read.csv("data/OB_S.csv")
AC <- read.csv("data/AC.csv")
AC_S <- read.csv("data/AC_S.csv")
df <- OB %>% select(1:3, contains("number"), contains("percent"), 'Lat', 'Long')
View(OB)
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains(paste0("2004"), contains('Lat'), contains('Long')))
colnames(df)[5] <- "value"
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), contains('Lat'), contains('Long'))
colnames(df)[5] <- "value"
choro <- CountyChoropleth$new(df_pop_county)
choro <- CountyChoropleth$new(df)
choro
ggplot(choro)
plot_ly(choro)
plot_ly(df)
choro <- CountyChoropleth$new(df)
choro$title <- "2012 Population Estimates"
choro$ggplot_scale <- scale_fill_brewer(name="Population", palette=2, drop=FALSE)
choro$render()
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$ggplot_scale <- scale_fill_brewer(name="Percent Pop Obese", palette=2, drop=FALSE)
choro$render()
df <- df %>% filter(state == "washington")
df <- df %>% filter(State == "washington")
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$ggplot_scale <- scale_fill_brewer(name="Percent Pop Obese", palette=2, drop=FALSE)
choro$render()
help(ggplot_scale)
??ggplot_scale
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), contains('Lat'), contains('Long'))
colnames(df)[5] <- "value"
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$ggplot <- scale_fill_brewer(name="Percent Pop Obese", palette=2, drop=FALSE)
choro$render()
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$plot_ly <-
choro$render()
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$ggplot <-
choro$render()
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$ggplot
choro$render()
ggplot(choro)
help("CountyChoropleth")
helpR6
help(R6)
plot(choro)
map <- county_choropleth(df)
plot(map)
mapg <- ggplot(df)
plot(mapg)
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_204, "Percent Obese", percent_2004))
View(df)
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", percent_2004))
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", percent_2004))
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), contains('Lat'), contains('Long'))
#colnames(df)[5] <- "value"
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", percent_2004))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = regions, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese"))
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'county-usa'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choroplethr',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'USA-county'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'USA-state'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$ggplot_scale <-
choro$render()
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), contains('Lat'), contains('Long'))
#colnames(df)[5] <- "value"
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", percent_2004))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = region, type = 'choropleth',
locationmode = 'region', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white'),
landcolor = toRGB('grey')
)
plot_ly(df, z = percent_2004, text = hover, locations = State, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = County, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = percent_2004, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
map <- county_choropleth(df)
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), contains('Lat'), contains('Long'))
colnames(df)[5] <- "value"
map <- county_choropleth(df)
plot_ly(map, z = percent_2004, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = percent_2004, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(map, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", percent_2004))
plot_ly(df, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", percent_2004))
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", value))
plot_ly(df, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
ggplot() +
geom_polygon(data = df,
aes(x = Long, y = Lat, group = group, fill = prevalence),
color = "black", size = 0.25) +
coord_map()
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro <- CountyChoropleth$new(df)
choro$title <- "2004 Obesity Data"
choro$render()
mapg<-   choro
mapg <-   choro
plot_ly(mapg, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
mapg <-   choro$render()
plot_ly(mapg, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
df <- OB %>% select(1:3, contains("number"), contains("percent"), contains('Lat'), contains('Long'))
colnames(df)[2] <- "region"
df <- df %>% select(1:3, contains("2004"), contains('Lat'), contains('Long'))
colnames(df)[5] <- "value"
ggplot() +
geom_polygon(data = df,
aes(x = Long, y = Lat, group = group, fill = prevalence),
color = "black", size = 0.25) +
coord_map()
ggplot() +
geom_polygon(data = df,
aes(x = Long, y = Lat),
color = "black", size = 0.25) +
coord_map()
plot_ly(mapg, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
map <- plot_ly(mapg, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
plot(map)
map
map <- plot_ly(df, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
map
df$hover <- with(df, paste(State, '<br>', "Number Surveyed", number_2004, "Percent Obese", value))
map <- plot_ly(df, z = value, text = hover, locations = region, type = 'choropleth',
locationmode = 'USA-states', color = value, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Percent Obese")) %>%
layout(title = 'Obesity 2004<br>(Hover for breakdown)', geo = g)
map
runApp()
runApp()
runApp()
View(OB)
runApp()
runApp()
runApp()
runApp()
runApp()
map_table <- OB %>% select(1, 3, contains(paste0(2004))) %>%
filter(State == 'washington') %>%
select(2:4)
colnames(map_table) <- c("County", "Surveyed", "Percent Obese")
map_table
View(map_table)
map_table <- OB %>% select(1, 3, contains(paste0(2004))) %>%
filter(State == 'Washington') %>%
select(2:4)
colnames(map_table) <- c("County", "Surveyed", "Percent Obese")
map_table
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(visibilityFuncs)
install.packages("visibilityFuncs")
install.packages(https://github.com/daattali/shinyjs)
install.packages("https://github.com/daattali/shinyjs")
packageurl <- "https://github.com/daattali/shinyjs"
install.packages(packageurl, contriburl=NULL, type="source")
install.packages("shinyjs")
runApp()
runApp()
OB_AC_AVG <- read.csv("data/OBandAC_DF.csv")
help("group_by")
num_counties <- OB %>% group_by(State) %>% summarise(n())
View(num_counties)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(OB)
help("summarise")
runApp()
runApp()
col_name <- paste0("number_", 2004)
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(col_name))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum_(col_name))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum('col_name'))
col_name
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum('number_2004'))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(OB[,col_name]))
View(num_counties_and_surveyed)
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(select(OB, col_name)))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(select(OB, contians(col_name))))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(select(OB, contains(col_name)))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(select(OB, contains(col_name)))
#############################################################
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(select(OB, contains(col_name)))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), sum(select(OB, contains(col_name))))
num_counties_and_surveyed <- OB %>% group_by(State) %>% summarise(n(), "sum" =sum(select(OB, contains(col_name))))
View(num_counties_and_surveyed)
num_counties_and_surveyed <- OB %>% group_by(State) %>% select(1,3, contians(col_name)) %>%
summarise(n(), "sum" =sum(df[,4])))
num_counties_and_surveyed <- OB %>% group_by(State) %>% select(1,3, contians(col_name)) %>%
summarise(n(), "sum" =sum(df[,4]))
num_counties_and_surveyed <- OB %>% group_by(State) %>% select(1,3, contians('col_name')) %>%
summarise(n(), "sum" =sum(df[,4]))
num_counties_and_surveyed <- OB %>% group_by(State) %>% select(1,3, contains(col_name)) %>%
summarise(n(), "sum" =sum(df[,4]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
